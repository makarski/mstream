[[services]]
provider = "pubsub"
name = "pubsub-example"
auth = { kind = "service_account", account_key_path = "/path/to/service-account.json" }

[[services]]
provider = "pubsub"
name = "pubsub-static-token"
auth = { kind = "static_token", env_token_name = "PUBSUB_TOKEN" }

[[services]]
provider = "kafka"
name = "kafka-local"
"bootstrap.servers" = "localhost:9092"

[[services]]
provider = "kafka"
name = "kafka-cloud"
"bootstrap.servers" = "your-kafka-broker:9092"
"security.protocol" = "SASL_SSL"
"sasl.mechanism" = "PLAIN"
"sasl.username" = "env:MSTREAM_KAFKA_USERNAME"
"sasl.password" = "env:MSTREAM_KAFKA_PASSWORD"
"client.id" = "mstream-client"

[[services]]
provider = "mongodb"
name = "mongodb-source"
connection_string = "mongodb://localhost:27017"
db_name = "example_db"

# Connector Configurations
[[connectors]]
name = "mongodb-source-connector"
# Configure the source MongoDB collection to watch for changes
source = { service_name = "mongodb-source", id = "example_collection" }
schema = { service_name = "pubsub-example", id = "projects/your-project/schemas/example-schema" }
sinks = [
    { service_name = "kafka-local", id = "local_topic" },
    { service_name = "kafka-cloud", id = "cloud_topic" },
    { service_name = "pubsub-example", id = "projects/your-project/topics/example-topic" },
]

[[connectors]]
name = "kafka-source-connector"
# Configure Kafka as a source
source = { service_name = "kafka-cloud", id = "source_topic" }
schema = { service_name = "pubsub-example", id = "projects/your-project/schemas/kafka-source-schema" }
sinks = [
    { service_name = "kafka-local", id = "processed_topic" },
    { service_name = "pubsub-example", id = "projects/your-project/topics/processed-topic" },
]
