x-common-variables:
  MONGO_IMAGE: &mongo_image mongo:6

services:
  mongo1:
    container_name: mongo1
    hostname: mongo1
    image: *mongo_image
    restart: always
    volumes:
      - mongovol1:/data/db
      - ./db-fixtures:/opt/fixtures
      - ./local/scripts:/opt/scripts
    ports:
      - "27017:27017"
    command: mongod --replSet mstream_db_replica_set --bind_ip_all
    networks:
      - mongoCluster

  mongo2:
    container_name: mongo2
    hostname: mongo2
    image: *mongo_image
    restart: always
    volumes:
      - mongovol2:/data/db
      - ./db-fixtures:/opt/fixtures
    ports:
      - "27018:27017"
    command: mongod --replSet mstream_db_replica_set --bind_ip_all
    networks:
      - mongoCluster

  mongo3:
    container_name: mongo3
    hostname: mongo3
    image: *mongo_image
    restart: always
    volumes:
      - mongovol3:/data/db
      - ./db-fixtures:/opt/fixtures
    ports:
      - "27019:27017"
    command: mongod --replSet mstream_db_replica_set --bind_ip_all
    networks:
      - mongoCluster

  kafka:
    container_name: kafka
    hostname: kafka
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    networks:
      - mongoCluster

networks:
  mongoCluster:
    name: mongoCluster

volumes:
  mongovol1:
  mongovol2:
  mongovol3:
